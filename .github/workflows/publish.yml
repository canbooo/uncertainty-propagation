name: Publish to Pypi
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version upload to pypi'
        required: true
      pypi_repo:
        description: 'Repo to upload to (testpypi or pypi)'
        default: 'testpypi'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: publish_pypi
      url: https://pypi.org/p/uncertainty-propagation
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.version }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pip install "poetry<2.1"
        shell: bash
      - name: Set GitHub Tag as Package Version
        run: |
          sed -i -r 's/__version__ = ".*"/__version__ = "${{ steps.tag_version.outputs.new_tag }}"/g' ./uncertainty_propagation/__init__.py
          sed -i '0,/^version =.*/s//version = "'"${{ steps.tag_version.outputs.new_tag }}"'"/' ./pyproject.toml
        shell: bash
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Build and Publish
        if: ${{ github.event.inputs.pypi_repo == 'pypi' }}
        run: |
          poetry publish -p ${{ secrets.PYPI_TOKEN }} -u __token__ --build
        shell: bash
      - name: Build and Publish
        if: ${{ github.event.inputs.pypi_repo == 'testpypi' }}
        run: |
          poetry config repositories.publish https://test.pypi.org/legacy/
          poetry publish -p ${{ secrets.TESTPYPI_TOKEN }} -u __token__ -r publish --build
        shell: bash
